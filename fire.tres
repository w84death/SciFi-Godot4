[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://bap52bh5etp8l"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vl166"]
default_input_values = []
expanded_output_ports = []
input_name = "color"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_jhqgt"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
expanded_output_ports = []
operator = 4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_bm63v"]
default_input_values = []
expanded_output_ports = []

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_11a2x"]
default_input_values = []
expanded_output_ports = []
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7xjuo"]
default_input_values = []
expanded_output_ports = []
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_3mt5w"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 0, 0)]
expanded_output_ports = []
operator = 2

[sub_resource type="OpenSimplexNoise" id="OpenSimplexNoise_3pxvj"]
period = 128.0
persistence = 0.168

[sub_resource type="NoiseTexture" id="NoiseTexture_ygxj0"]
noise = SubResource( "OpenSimplexNoise_3pxvj" )

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6bw0s"]
output_port_for_preview = 0
default_input_values = []
expanded_output_ports = []
texture = SubResource( "NoiseTexture_ygxj0" )

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ay2fl"]
default_input_values = []
expanded_output_ports = []
input_name = "normal"

[resource]
code = "shader_type spatial;
uniform sampler2D tex_vtx_5;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// Input:6
	vec3 n_out6p0 = NORMAL;


// Texture2D:5
	vec4 tex_vtx_5_read = texture(tex_vtx_5, n_out6p0.xy);
	vec3 n_out5p0 = tex_vtx_5_read.rgb;
	float n_out5p1 = tex_vtx_5_read.a;


// VectorOp:4
	vec3 n_out4p0 = n_out3p0 * n_out5p0;


// Output:0
	VERTEX = n_out4p0;


}

void fragment() {
// Input:3
	vec3 n_out3p0 = COLOR.rgb;


// FloatConstant:5
	float n_out5p0 = 0.000000;


// FloatConstant:6
	float n_out6p0 = 1.000000;


	vec3 n_out4p0;
// ColorOp:4
	vec3 n_in4p0 = vec3(0.00000, 0.00000, 0.00000);
	{
		float base = n_in4p0.x;
		float blend = n_out3p0.x;
		if (base < 0.5) {
			n_out4p0.x = 2.0 * base * blend;
		} else {
			n_out4p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_in4p0.y;
		float blend = n_out3p0.y;
		if (base < 0.5) {
			n_out4p0.y = 2.0 * base * blend;
		} else {
			n_out4p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_in4p0.z;
		float blend = n_out3p0.z;
		if (base < 0.5) {
			n_out4p0.z = 2.0 * base * blend;
		} else {
			n_out4p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	ALBEDO = n_out3p0;
	ALPHA = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333));
	METALLIC = n_out5p0;
	ROUGHNESS = n_out6p0;
	SPECULAR = n_out5p0;
	EMISSION = n_out4p0;


}
"
graph_offset = Vector2(-114.36, 116.748)
engine_version = {
"major": 4,
"minor": 0
}
nodes/vertex/3/node = SubResource( "VisualShaderNodeInput_7xjuo" )
nodes/vertex/3/position = Vector2(-120, 140)
nodes/vertex/4/node = SubResource( "VisualShaderNodeVectorOp_3mt5w" )
nodes/vertex/4/position = Vector2(120, 160)
nodes/vertex/5/node = SubResource( "VisualShaderNodeTexture_6bw0s" )
nodes/vertex/5/position = Vector2(-560, 200)
nodes/vertex/6/node = SubResource( "VisualShaderNodeInput_ay2fl" )
nodes/vertex/6/position = Vector2(-860, 260)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 0, 0, 5, 0, 4, 1, 6, 0, 5, 0)
nodes/fragment/0/position = Vector2(680, 80)
nodes/fragment/3/node = SubResource( "VisualShaderNodeInput_vl166" )
nodes/fragment/3/position = Vector2(80, 160)
nodes/fragment/4/node = SubResource( "VisualShaderNodeColorOp_jhqgt" )
nodes/fragment/4/position = Vector2(380, 240)
nodes/fragment/5/node = SubResource( "VisualShaderNodeFloatConstant_bm63v" )
nodes/fragment/5/position = Vector2(120, 260)
nodes/fragment/6/node = SubResource( "VisualShaderNodeFloatConstant_11a2x" )
nodes/fragment/6/position = Vector2(120, 320)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 5, 0, 0, 2, 6, 0, 0, 3, 5, 0, 0, 4, 3, 0, 4, 1, 4, 0, 0, 5, 3, 0, 0, 1)
